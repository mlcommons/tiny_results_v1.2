/**
This file was generated by
   _   _      _      _       _____
  | | | |    / \    | |     | ____|
  | |_| |   / _ \   | |     |  _|
  |  _  |  / ___ \  | |___  | |___
  |_| |_| /_/   \_\ |_____| |_____|
version: 1.0.174
Model: ad01_fp32.tflite
Target: CortexM4
Timestamp: 2024_03_04_11.25.12
SPDX-FileCopyrightText: Copyright Â© 2023 Robert Bosch GmbH
SPDX-License-Identifier: LicenseRef-Bosch-Proprietary
**/
#ifndef IN_OUT_H
#define IN_OUT_H

#include <math.h>
#include <stdint.h>


// Buffer size (4 byte for each element)
#define BUFFER_SIZE_32BIT 768


// Input sizes
#define INPUT_1_NUM_ELEMS 640

// Output sizes
#define IDENTITY_NUM_ELEMS 640


typedef struct {
    float* input_1;
    float* Identity;

    float* input; // -> input_1
    float* output; // -> Identity
} nnInOut;

/** 
 * Creates a nnInOut instance for the neural network nn.
 * This sets the pointers in the struct defined above to the correct places in the buffer
 * \param buffer Buffer that contains the memory the neural network operates on
 * return Struct containing pointers to the network input and output
 */
nnInOut get_nnInOut_for(float* buffer);

#endif // IN_OUT_H
